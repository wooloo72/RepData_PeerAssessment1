hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd&$V)
maxCon <- which.max(svd$V)
maxCon <- which.max(svd1$V)
maxCon <- which.max(svd1$V[, 2])
maxCon <- which.max(svd1$V[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[, 10:12], maxCon))
mdist <- dist(sub1[, 10:12])
mdist <- dist(sub1[, c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562,563)], centers =6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562,563)], centers =6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12], pch=19, ylab="Laying Cluster")
names(sub1[, 1:3])
walkdown <- which(kclust$size==49)
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12], pch=19, ylab="Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(X1))
mean(is.na(xX1))
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1)
)
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Dates
dates <- pm1$Date
str(dates)
dates <- as.Date(as.Character(dates), "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dagtes[negative], "month")
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code ==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code ==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, county.site=="63.2008")
pm0sub <- subset(cnt0, County.Codee==63 & SIteID==2008)
pm0sub <- subset(cnt0, County.Code==63 & SIteID==2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(h=median(x0sub), lwd=2, na.rm=TRUE)
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0, d1, by="state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[, 2], xlim=c(.5,2.5)))
with(mrg, plot(rep(2,52), mrg[, 3]))
with(mrg, points(rep(2,52), mrg[, 3]))
with(mrg, points(rep(1,52), mrg[, 2], xlim=c(.5,2.5)))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x<mrg$mean.y]
mrg[mrg$mean.x<mrg$mean.y, ]
library(ggplot2)
install.packages("knitr")
setwd("~/datasciencecoursera/RepData_PeerAssessment1")
data1 <- read.csv("./activity.csv")
head(data1)
data1 <- read.csv("./activity.csv", header=TRUE)
summary(data1)
tail(data1)
as.Date(data1$date)
data1$date <- as.Date(data1$date)
with(data1, tapply(steps, data, sum, na.rm=TRUE))
with(data1, tapply(steps, date, sum, na.rm=TRUE))
data2 <- with(data1, tapply(steps, date, sum, na.rm=TRUE))
head(data2)
hist(data2)
dim(data2)
summary(data2)
df2 <- data.frame(date=names(data2), sum=data2)
head(df2)
hist(df2$sum)
summary(df2)
summary(data2)
data3 <- with(data1, tapply(steps, interval, mean, na.rm=TRUE))
df3 <- data.frame(date=names(data3), mean=data3)
head(df3)
df3 <- data.frame(interval=names(data3), mean=data3)
head(df3)
with(df3, plot(mean, interval, ltyp="l"))
with(df3, plot(mean, interval, lty="l"))
with(df3, plot(mean, interval, lty="2"))
with(df3, plot(mean, interval))
class(df3$interval)
head(data3)
with(df3, plot(mean, interval, lty="1"))
with(df3, plot(mean, interval, type="l"))
with(df3, plot(interval, mean, type="l"))
head(data1)
with(df3, plot(interval, mean, type="l"))
summary(data1)
hist(df2$sum)
data1 <- read.csv("./activity.csv", header=TRUE)
data1$date <- as.Date(data1$date)
data2 <- with(data1, tapply(steps, date, sum, na.rm=TRUE))
df2 <- data.frame(date=names(data2), sum=data2)
summary(df2)
hist(df2$sum, breaks=10, xlab="Total number of steps per day", col="green")
abline(v=median(df2$sum), col="blue", lwd=4)
title(main="Histogram of daily total number of steps, Oct-Nov 2012")
hist(df2$sum, breaks=10, xlab="Total number of steps per day", col="green", main="Histogram of daily total number of steps, Oct-Nov 2012")
abline(v=median(df2$sum), col="blue", lwd=4)
legend("topright", pch=2, col="blue", legend="median")
legend("topright", lty=2, col="blue", legend="median")
legend("topright", lty=1, col="blue", legend="median")
data3 <- with(data1, tapply(steps, interval, mean, na.rm=TRUE))
data3 <- with(data1, tapply(steps, interval, mean, na.rm=TRUE))
plot(data3)
plot(data3, type="1")
plot(data3, type="l")
data2
hist(data2)
hist(data2, breaks=10, col="green")
data3 <- with(data1, tapply(steps, interval, mean, na.rm=TRUE))
plot(data3, type="l", main="Average number of steps per 5-minutes interval, averaged across all days", col="red")
summary(data3)
df3 <- data.frame(interval=names(data3), mean=data3)
max(df3)
head(df3)
x <- df3[, mean=max(df3$mean)]
x <- df3[, mean==max(df3$mean)]
x <- df3[, df3$mean==max(df3$mean)]
x <- df3[mean==max(df3$mean), ]
x <- df3[mean=max(df3$mean), ]
max(df3$mean)
df3[df3$mean = max(df3$mean), ]
df3[df3$mean == max(df3$mean), ]
summary(df3)
plot(data3, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all days", xlab="Time interval index", ylab="Average number of steps")
df3
df3$interval <- df3$interval/5
head(data3)
head(data3, n=30)
head(data1)
head(data1, n=30)
head(data1, n=40)
tail(data1)
abline(v=max(df3$mean))
install.packages("lubridate")
library(lubridate)
period(num=data1$interval, units="second")
period(units="second", data1$interval)
seq( ISOdatetime(2012,10,1,0,0,0), ISOdatetime(2012,11,30,23,55,0), by=(60*5))
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0), ISOdatetime(2012,11,30,23,55,0), by=(60*5))
data1 <- cbind(data1, DateTime)
tail(data1)
tail(DateTime)
View(data1)
head(data1)
head(DateTime, 20)
tail(DateTime, 20)
tail(DateTime, 60)
format(DateTime, %H%M)
format(DateTime, "%H%M"")
<
format(DateTime, "%H%M")
data1$interval
unique(data1$date)
table(data1$date, data1$interval)
table(data1$date, sum(data1$interval))
summary(data1)
str(data1)
xx <- is.na(data1$steps)
data1x <- data1[xx,]
data1y <- data1[!xx,]
Sys.timezone()
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,11,30,23,55,0,tz="Europe/Brussels"), by=(60*5))
summary(DateTime)
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,11,30,0,0,0,tz="Europe/Brussels"), by=(60*5))
dim(DateTime)
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,11,30,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
head(data1)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,1,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,31,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,2,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,3,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,30,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,10,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,15,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,20,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,25,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,29,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,26,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,27,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,28,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
tail(DateTime)
tail(DateTime, 50)
tail(DateTime, 290)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,25,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
tail(DateTime, 288)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,27,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
tail(DateTime, 288)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="Europe/Brussels"), ISOdatetime(2012,10,28,23,55,0,tz="Europe/Brussels"), by=(60*5))
str(DateTime)
tail(DateTime, 301)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="UTC"), ISOdatetime(2012,10,28,23,55,0,tz="UTC"), by=(60*5))
str(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="UTC"), ISOdatetime(2012,11,30,23,55,0,tz="UTC"), by=(60*5))
str(DateTime)
head(DateTime)
test <- format(DateTime, "%h%m%s")
head(test)
test <- format(DateTime, "%H%M%s")
head(test)
test <- format(DateTime, "%H%M%S")
head(test)
test <- format(DateTime, "%H:%M:%S")
head(test)
str(test)
as.POSIXct(DateTime)
test <- as.POSIXct(DateTime)
class(test)
test <- strftime(as.POSIXct(DateTime), format="%H:%M:%S")
head(test)
strftime( as.POSIXct(DateTime), format = "%H:%M:%S")
head(DateTime)
DateTime <- seq( ISOdatetime(2012,10,1,0,0,0, tz="UTC"), ISOdatetime(2012,11,30,23,55,0,tz="UTC"), by=(60*5))
head(DateTime)
test <- strftime(as.POSIXct(DateTime), format="%H:%M:%S")
head(test)
head(DateTime)
as.POSIXct(DateTime[1])
test <- strftime(DateTime, format="%H:%M:%S")
test <- strftime(DateTime, format="%H:%M:%S", tz="UCT")
head(test)
data1 <- cbind(data1, test)
head(data1)
Time <- strftime(DateTime, format = "%H:%M:%S", tz="UCT")
data1 <- data1[,-test]
data1 <- data1[,(-test)]
library(dplyr)
data1 <- select(data1, -test)
data1 <- cbind(data1, Time)
head(data1)
head(data1, 350)
hist(data2, breaks=10, xlab="Total number of steps per day", col="green", main="Histogram of daily total number of steps, Oct-Nov 2012")
head(data1)
data3 <- with(data1, tapply(steps, Time, mean, na.rm=TRUE))
plot(data3, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all days", xlab="Time interval index", ylab="Average number of steps")
head(data3)
df3 <- data.frame(date=names(data3), mean=data3)
plot(df3, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all days", xlab="Time interval index", ylab="Average number of steps")
with(df3, plot(Time, mean))
head(df3)
df3 <- data.frame(time=names(data3), mean=data3)
with(df3, plot(time, mean))
with(df3, plot(time, mean, type="l"))
plot(data3$, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all days", xlab="Time interval index", ylab="Average number of steps")
plot(data3, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all days", xlab="Time interval index", ylab="Average number of steps")
table(data3)
as.POSIXct(names(data3))
names(data"")
names(data3)
names.POSIXlt(data3)
str(data3)
factor(data3)
df3$time <- as.POSIXct.numeric(df3$time, tz="UTC")
df3$time <- as.POSIXct(df3$time, tz="UTC")
df3$time <- as.POSIXct(df3$time, tz="UTC", format="%H:%M:%S")
head(df3)
plot(df33, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all days", xlab="Time interval index", ylab="Average number of steps")
plot(df3, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all days", xlab="Time interval index", ylab="Average number of steps")
df3[df3$mean == max(df3$mean), ]
df3[df3$mean == max(df3$mean), 2]
df3[104,]
hist(data2, breaks=10, xlab="Total number of steps per day", col="green", main="Histogram of daily total number of steps, Oct-Nov 2012")
abline(v=median(data2), col="blue", lwd=4)
plot(df3, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all days", xlab="Time", ylab="Average number of steps")
summary(df3)
plot(data3, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all days", xlab="Time interval index", ylab="Average number of steps")
xx <- is.na(data1$steps)
is.na(data1$steps)
xx <- is.na(data1$steps)
data1x <- data1[xx,]
head(data1x)
summary(data1s)
summary(data1x)
dim(xx)
data1$interval[5]
data1$steps[5]
df3$mean[5]
length(df3)
nrow(df3)
nrow(data1)
head(df3)
head(data3)
z <- df3$mean[data1$interval[5]]
z
head(data1)
head(df3, 30)
z <- df3$mean[data1$Time[5]]
z
MissingData <- data1[is.na(data1$steps)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
MissingData <- data1[is.na(data1$steps)
]
MissingData <- data1[is.na(data1$steps), ]
nrows(MissingData)
nrow(MissingData)
data4 <- data1
for ( i in 1:nrow(data4)) {
if ( is.na(data4$steps[i])) {
data4$steps[i] <- df3$mean[data4$Time[i]]
}
}
head(data4)
head'df3'
head(df3)
MissingData2 <- data4[is.na(data1$steps), ]
MissingData2 <- data4[is.na(data4$steps), ]
plot(data4b, type="h", col="red", main="Average number of steps per 5-minutes interval, averaged across all days", xlab="Time interval index", ylab="Average number of steps")
data4b <- with(data4, tapply(steps, interval, mean, na.rm=TRUE))
plot(data4b, type="h", col="red", main="Average number of steps per 5-minutes interval, averaged across all days", xlab="Time interval index", ylab="Average number of steps")
summary(data4b)
data4b <- with(data4, tapply(steps, interval, sum, na.rm=TRUE))
hist(data4b, breaks=10, xlab="Total number of steps per day", col="green", main="Histogram of daily total number of steps, Oct-Nov 2012")
data4b <- with(data4, tapply(steps, date, sum, na.rm=TRUE))
hist(data4b, breaks=10, xlab="Total number of steps per day", col="green", main="Histogram of daily total number of steps, Oct-Nov 2012")
summary(data4b)
abline(v=median(data4b), col="blue", lwd=4)
mtext(text="bla", line =2)
mtext(text="bla", line =-2)
mtext(text="bla", line =-1)
mtext(text="bla")
mtext(text="Missing values replaced by average  for the given interval")
weindic <- weekdays(data1$date)
weindic <- grepl("Saturday"|"Sunday", weindic)
summary(weindic)
head(weindic)
data5 <- data1
data5 <- cbind(data5, weindic)
head(data5)
weekday <- weekdays(data1$date)
data5 <- cbind(data5, weekday)
head(data5)
data5 <- select(data5, -weindic)
head(data5)
zz <- grepl("Saturday"|"Sunday", data5)
zz <- grepl("Saturday"|"Sunday", data5$weekday)
zz <- grepl("Saturday", data5$weekday)
for ( i in 1:nrow(data5)) {
if ( data5$weekday[i] in c("Saturday","Sunday")) {
data4$weekday[i] <- "weekend"
else data4$weekday[i] <- "weekday"
}
}
for ( i in 1:nrow(data5)) {
if ( data5$weekday[i] in c("Saturday","Sunday")) {
data4$weekday[i] <- "weekend"
}
}
for ( i in 1:nrow(data5)) {
if ( data5$weekday[i] %in% c("Saturday","Sunday")) {
data4$weekday[i] <- "weekend"
else data4$weekday[i] <- "weekday"
}
}
for ( i in 1:nrow(data5)) {
if ( data5$weekday[i] %in% c("Saturday","Sunday")) {
data4$weekday[i] <- "weekend"
else (data4$weekday[i] <- "weekday")
}
}
for ( i in 1:nrow(data5)) {
if ( data5$weekday[i] %in% c("Saturday","Sunday")) {
(data4$weekday[i] <- "weekend")
else (data4$weekday[i] <- "weekday")
}
}
for ( i in 1:nrow(data5)) {
if ( data5$weekday[i] %in% c("Saturday","Sunday")) {
data4$weekday[i] <- "weekend"
}
}
summary(data5)
head(data5)
data5 <- cbind(data4, weekday)
head(data5)
rm(data5)
data5 <- cbind(data4, weekday)
head(data5)
head(data4)
rm(list=ls)
head(data4)
data4 <- select(data4, -weekday)
head(data4)
head(weekday)
data5 <- cbind(data4, weekday)
head(data4)
head(data5)
test2 <- filter(data5, weekday %in% c("Saturday","Sunday"))
View(test2)
for ( i in 1:nrow(data5)) {
if (  data5$weekday[i] %in% c("Saturday","Sunday")  ) {
data5$weekday[i] <- "weekend" }
else {
data5$weekday[i] <- "weekday" }
}
warnings()
head(data5)
data5 <- cbind(data4, weekday)
head(data5)
str(data5)
data5$weekday <- ifelse(data5$weekday %in% c("Saturday","Sunday"), "Weekend","Weekday")
head(data5)
str(data5)
data5$weekday <- factor(data5$weekday, levels = c("Weekday","Weekend")
)
str(data5)
head(data5)
library(ggplot2)
g <- ggplot(data5, aes(Time, mean(steps))) + facet_grid(.~weekday)+ geom_line()
print(g)
g <- ggplot(data5, aes(Time, mean(steps))) + facet_grid(.~weekday)+ geom_point()
print(g)
data5a <- filter(data5, weekday = "Weekend")
data5a <- filter(data5, weekday == "Weekend")
data5b <- filter(data5, weekday == "Weekday")
data5WeekendMean <- with(data5a, tapply(steps, interval, mean, na.rm=TRUE))
df5a <- data.frame(time=names(data5WeekendMean), mean=data5WeekendMean)
df5a$time <- as.POSIXct(df5a$time, tz="UTC", format="%H:%M:%S")
data5WeekdayMean <- with(data5b, tapply(steps, interval, mean, na.rm=TRUE))
df5b <- data.frame(time=names(data5WeekdayMean), mean=ddata5WeekdayMean)
df5b$time <- as.POSIXct(df5b$time, tz="UTC", format="%H:%M:%S")
data5WeekdayMean <- with(data5b, tapply(steps, interval, mean, na.rm=TRUE))
df5b <- data.frame(time=names(data5WeekdayMean), mean=ddata5WeekdayMean)
df5b <- data.frame(time=names(data5WeekdayMean), mean=data5WeekdayMean)
df5b$time <- as.POSIXct(df5b$time, tz="UTC", format="%H:%M:%S")
par(mfcol=c(2,1))
lot(df5a, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all weekend days", xlab="Time interval index", ylab="Average number of steps")
plot(df5a, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all weekend days", xlab="Time interval index", ylab="Average number of steps")
df5a <- with(data5a, tapply(steps, interval, mean, na.rm=TRUE))
df5b <- with(data5b, tapply(steps, interval, mean, na.rm=TRUE))
plot(df5a, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all weekend days", xlab="Time interval index", ylab="Average number of steps")
par(mfcol=c(2,1))
plot(df5a, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all weekend days", xlab="Time interval index", ylab="Average number of steps")
plot(df5b, type="l", col="red", main="Average number of steps per 5-minutes interval, averaged across all weekdays", xlab="Time interval index", ylab="Average number of steps")
title(main = "Average number of steps per 5-minutes interval")
mtext(text="Average blabkla")
# determine day of the week
head(data4)
weekday <- weekdays(data4$date)
